env:
  DIRECTORY: build
  PROJECT_NAME: VayaPin

name: Release

on:
  workflow_dispatch: null

jobs:
  Version:
    outputs:
      created: ${{ env.DAILY_VERSION_CREATED }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: pnpm
      - run: corepack enable
      - run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Create tag if necessary
        uses: fregante/daily-version-action@v2

      - name: Update manifest.json with version ${{ env.DAILY_VERSION}}
        if: env.DAILY_VERSION_CREATED
        run: npx dot-json@1 "$DIRECTORY/manifest.json" version "$DAILY_VERSION"

      - name: Ready for "submit" jobs
        if: env.DAILY_VERSION_CREATED
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.DIRECTORY }}

      - name: Create release
        if: env.DAILY_VERSION_CREATED
        working-directory: ${{ env.DIRECTORY }}
        run: |
          FILENAME="$PROJECT_NAME-$DAILY_VERSION-for-local-testing-only.zip"
          zip -r "$FILENAME" ./*
          # Create as draft to curate it before sending it out
          gh release create "$DAILY_VERSION" "$FILENAME" --draft --generate-notes

  Firefox:
    if: needs.Version.outputs.created
    needs: Version
    name: Submit (Firefox)
    environment: Firefox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Upload build for Firefox
        run: |
          mv "$DIRECTORY/firefox-mv3-prod" artifact
          npx web-ext@8 sign --channel listed
        working-directory: artifact
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}

  # Chrome:
  #   if: needs.Version.outputs.created
  #   needs: Version
  #   name: Submit (Chrome)
  #   environment: Chrome
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #     - name: Upload build for Chrome
  #       run: |
  #         mv "$DIRECTORY/chrome-mv3-prod" artifact
  #         npx chrome-webstore-upload-cli@3
  #       working-directory: artifact
  #       env:
  #         EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
  #         CLIENT_ID: ${{ secrets.CLIENT_ID }}
  #         CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  #         REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
