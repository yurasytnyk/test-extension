env:
  DIRECTORY: build
  PROJECT_NAME: Yurii Sytnyk

name: Release

on:
  workflow_dispatch:
    inputs:
      Version:
        description: "Example: v1.2.3"
        required: true

jobs:
  Version:
    outputs:
      created: ${{ github.event.inputs.Version }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: gh release create ${{ github.event.inputs.Version }} --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Update major tag
        run: |
          MAJOR=$(echo ${{ github.event.inputs.Version }} | sed 's/\..*//')
          git push origin HEAD:refs/tags/$MAJOR --force

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v4
        with:
          run_install: true

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Build the extension
        run: pnpm build

      - name: Update chrome manifest.json with version ${{ github.event.inputs.Version }}
        run: npx dot-json@1 "$DIRECTORY/chrome-mv3-prod/manifest.json" version "${{ github.event.inputs.Version }}"

      - name: Update firefox manifest.json with version ${{ github.event.inputs.Version }}
        run: npx dot-json@1 "$DIRECTORY/firefox-mv3-prod/manifest.json" version "${{ github.event.inputs.Version }}"

      - name: Update firefox manifest.json gecko id
        run: npx dot-json@1 "$DIRECTORY/firefox-mv3-prod/manifest.json" gecko.id "${{ secrets.FIREFOX_EXT_ID }}"

      - name: Ready for "submit" jobs
        if: github.event.inputs.Version
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.DIRECTORY }}

      - name: Create release
        if: github.event.inputs.Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ env.DIRECTORY }}
        run: |
          FILENAME="$PROJECT_NAME-${{ github.event.inputs.Version }}-for-local-testing-only.zip"
          zip -r "$FILENAME" ./*
          # Create as draft to curate it before sending it out
          gh release create "${{ github.event.inputs.Version }}" "$FILENAME" --draft --generate-notes

  Firefox:
    if: needs.Version.outputs.created
    needs: Version
    name: Submit (Firefox)
    environment: Firefox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true
      - uses: actions/download-artifact@v4

      - name: Upload build for Firefox
        run: |
          pnpm dlx web-ext sign --channel=listed --amo-metadata=../../amo-metadata.json --api-key=$AMO_JWT_ISSUER --api-secret=$AMO_JWT_SECRET --approval-timeout=0
        working-directory: artifact/firefox-mv3-prod
        env:
          AMO_JWT_ISSUER: ${{ secrets.AMO_JWT_ISSUER }}
          AMO_JWT_SECRET: ${{ secrets.AMO_JWT_SECRET }}

  # Chrome:
  #   if: needs.Version.outputs.created
  #   needs: Version
  #   name: Submit (Chrome)
  #   environment: Chrome
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/download-artifact@v4
  #     - name: Upload build for Chrome
  #       run: |
  #         mv "$DIRECTORY/chrome-mv3-prod" artifact
  #         npx chrome-webstore-upload-cli@3
  #       working-directory: artifact
  #       env:
  #         EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
  #         CLIENT_ID: ${{ secrets.CLIENT_ID }}
  #         CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  #         REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
